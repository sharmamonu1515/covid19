{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryDetails/CountryDetails.module.css","components/MapView/MapView.module.css","components/Header/Header.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryDetails/TableHeader/TableHeader.js","components/Search/SearchByCountry.jsx","components/Search/SearchByContinents.jsx","components/CountryDetails/CountryDetails.jsx","components/MapView/MapView.jsx","components/Header/Header.jsx","App.jsx","index.js","components/Cards/Cards.module.css"],"names":["module","exports","Cards","props","data","cases","recovered","deaths","updated","displayData","type","total","description","className","styles","container","Grid","spacing","jusitfy","map","index","key","item","component","Card","xs","md","cx","card","CardContent","Typography","color","cardLabel","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","a","fetch","then","response","json","fetchDailyData","axios","get","modifiedData","dailyData","confirmed","date","reportDate","fetchCountryDetails","Charts","useState","setDailyData","useEffect","fetchApi","confirmedCases","x","y","id","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","axisBottom","colors","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","enableGridX","lineWidth","pointSize","pointBorderWidth","pointLabelYOffset","crosshairType","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","TableHeader","classes","order","orderBy","onRequestSort","TableHead","TableRow","numeric","label","headCell","TableCell","align","sortDirection","TableSortLabel","active","onClick","property","event","tableHead","visuallyHidden","SearchByCountry","TextField","onChange","e","filterCountries","target","value","SearchByContinents","continent","i","Button","size","filterByContinent","descendingComparator","b","useStyles","makeStyles","theme","root","width","marginTop","paper","marginBottom","fontWeight","table","minWidth","border","clip","height","overflow","padding","position","success","backgroundColor","deathsCell","newCasesCell","formatNumber","number","Intl","NumberFormat","format","CountryDetails","React","countries","setCountries","countriesCopy","setCountriesCopy","activeContinent","setActiveContinent","setOrder","setOrderBy","countriesData","filteredCountries","filter","countryData","getCountriesDetails","slice","country","search","toLowerCase","includes","countryInfo","iso2","iso3","Paper","TableContainer","tableContainer","Table","bordercolor","TableBody","length","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","todayCases","todayDeaths","critical","casesPerOneMillion","deathsPerOneMillion","colSpan","Leaflet","Icon","Default","imagePath","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapView","mapMarkers","Marker","lat","lng","long","Popup","src","flag","title","alt","Map","center","zoom","TileLayer","attribution","Header","nav","to","App","state","this","setState","path","exact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b5b615d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__17KT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"CountryDetails_tableContainer__GGrUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapMarkers\":\"MapView_mapMarkers__1Zt9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__nBt1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__nAExG\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = (props) => {\r\n\r\n  const { data:  { cases, recovered, deaths, updated } }= props;\r\n\r\n  if (!cases) { return  'Loading...'; }\r\n  \r\n  const displayData = [\r\n    {\r\n      type: 'infected',\r\n      total: cases,\r\n      description: 'Number of active cases of COVID-19'\r\n    },\r\n    {\r\n      type: 'recovered',\r\n      total: recovered,\r\n      description: 'Number of recovered cases of COVID-19'\r\n    },\r\n    {\r\n      type: 'deaths',\r\n      total: deaths,\r\n      description: 'Number of deaths caused by COVID-19'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} jusitfy=\"center\">\r\n        {\r\n          displayData.map( (data, index) => (\r\n            <Grid key={index} item component={Card} xs={12} md={3} className={cx(styles.card, styles[data['type']])}>\r\n              <CardContent>\r\n                <Typography color=\"textPrimary\" className={styles.cardLabel} gutterBottom>{data.type}</Typography>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  <CountUp start={0} end={data.total} duration={2.5} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(updated).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {data.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          ))\r\n        }\r\n        \r\n        {/* <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalConfirmed} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovered cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid> */}\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://corona.lmao.ninja/v2';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const { cases, recovered, deaths, updated } = await fetch(`${url}/all?yesterday`)\r\n      .then(response => response.json());\r\n    return { cases, recovered, deaths, updated }\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://covid19.mathdro.id/api/daily');\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n      \r\n  }\r\n}\r\n\r\nexport const fetchCountryDetails = async () => {\r\n  try {\r\n    return await fetch(`${url}/countries`).then(response => response.json());\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://api.covid19api.com/countries');\r\n    return data.map((country) => country.Country);\r\n  } catch(error) {\r\n\r\n  }\r\n}\r\n\r\n// https://documenter.getpostman.com/view/11144369/Szf6Z9B3?version=latest","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Charts = () => {\r\n  const [dailyData, setDailyData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  if (!dailyData) return \"Loading...\";\r\n  const confirmedCases = dailyData.map((data) => {\r\n    return { x: data.date, y: data.confirmed };\r\n  });\r\n\r\n  const deaths = dailyData.map((data) => {\r\n    return { x: data.date, y: data.deaths };\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      id: \"Total Deaths\",\r\n      color: \"hsl(0, 100%, 50%)\",\r\n      data: deaths,\r\n    },\r\n    {\r\n      id: \"Total Cases\",\r\n      color: \"hsl(240, 100%, 50%)\",\r\n      data: confirmedCases,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{\r\n          type: \"point\",\r\n        }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: \"auto\",\r\n          max: \"auto\",\r\n          stacked: true,\r\n          reverse: false,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={null}\r\n        colors={data => data.color}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"\",\r\n          legendOffset: -40,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        enableGridX={false}\r\n        lineWidth={2}\r\n        pointSize={5}\r\n        pointBorderWidth={2}\r\n        pointLabelYOffset={-12}\r\n        // areaOpacity={0.1}\r\n        crosshairType=\"x\"\r\n        useMesh={true}\r\n        legends={[\r\n          {\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 100,\r\n            translateY: 0,\r\n            itemsSpacing: 0,\r\n            itemDirection: \"left-to-right\",\r\n            itemWidth: 80,\r\n            itemHeight: 20,\r\n            itemOpacity: 0.75,\r\n            symbolSize: 9,\r\n            symbolShape: \"circle\",\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TableHeader(props) {\r\n\r\n  const headCells = [\r\n    { id: 'country', numeric: false, label: 'Country' },\r\n    { id: 'cases', numeric: true, label: 'Total Cases' },\r\n    { id: 'todayCases', numeric: true, label: 'New Cases' },\r\n    { id: 'deaths', numeric: true, label: 'Total Deaths' },\r\n    { id: 'todayDeaths', numeric: true, label: 'New Deaths' },\r\n    { id: 'recovered', numeric: true, label: 'Total Recovered' },\r\n    { id: 'active', numeric: true, label: 'Active Cases' },\r\n    { id: 'critical', numeric: true, label: 'Serious' },\r\n    { id: 'casesPerOneMillion', numeric: true, label: 'Total Cases / Per 1M' },\r\n    { id: 'deathsPerOneMillion', numeric: true, label: 'Deaths / Per 1M' },\r\n    // { id: 'tests', numeric: true, label: 'Tests' },\r\n    // { id: 'testsPerOneMillion', numeric: true, label: 'Tests / Per 1M' },\r\n  ];\r\n\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='left'\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n              className={classes.tableHead}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst SearchByCountry = (props) => {\r\n  return  <TextField id=\"standard-search\" label=\"Search\" type=\"search\" onChange={ (e) => props.filterCountries(e.target.value)} />\r\n}\r\n\r\nexport default SearchByCountry;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SearchByContinents = (props) => {\r\n  const continents = [\r\n    { label: 'All', value: 'All' },\r\n    { label: 'Africa', value: 'Africa' },\r\n    { label: 'Asia', value: 'Asia' },\r\n    { label: 'Europe', value: 'Europe' },\r\n    { label: 'North America', value: 'North America' },\r\n    { label: 'Oceania', value: 'Australia/Oceania' },\r\n    { label: 'South America', value: 'South America' },\r\n  ];\r\n\r\n  return continents.map((continent, i) => (\r\n    <Button key={i} variant={continent.value === props.active ? 'outlined' : 'contained'} size=\"small\" className={props.classes.margin} color=\"primary\" onClick={(e) => props.filterByContinent(continent.value)}>{continent.label}</Button>\r\n    )\r\n  )\r\n}\r\n\r\nexport default SearchByContinents;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableHeader from \"./TableHeader/TableHeader\";\r\nimport SearchByCountry from \"../Search/SearchByCountry\";\r\nimport SearchByContinents from \"../Search/SearchByContinents\";\r\n\r\nimport { fetchCountryDetails } from \"../../api\";\r\n\r\nimport styles from \"./CountryDetails.module.css\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"95%\",\r\n    marginTop: \"100px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableHead: {\r\n    fontWeight: \"bold\",\r\n    color: \"#000\",\r\n    \"&:hover\": {\r\n      color: \"rgba(0, 0, 0, 0.7)\",\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 1,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  success: {\r\n    backgroundColor: \"rgba(118, 251, 118, 0.25)\",\r\n  },\r\n  deathsCell: {\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  newCasesCell: {\r\n    backgroundColor: \"#ffd68b\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction formatNumber(number) {\r\n  return number ? new Intl.NumberFormat().format(number) : \"\";\r\n}\r\n\r\nconst CountryDetails = () => {\r\n  const [countries, setCountries] = React.useState([]);\r\n  const [countriesCopy, setCountriesCopy] = React.useState([]);\r\n  const [activeContinent, setActiveContinent] = React.useState(\"All\");\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"cases\");\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const getCountriesDetails = async () => {\r\n      const countriesData = await fetchCountryDetails();\r\n      const filteredCountries = countriesData.filter(\r\n        (countryData) => countryData.cases > 0\r\n      );\r\n      setCountries(filteredCountries);\r\n      setCountriesCopy(filteredCountries);\r\n    };\r\n    getCountriesDetails();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const filterCountries = (value) => {\r\n    let filteredCountries = [];\r\n    if (value === \"\") {\r\n      return filterByContinent(activeContinent); // return and show active continent values\r\n    } else {\r\n      const search = value.toLowerCase();\r\n      filteredCountries = countries.slice().filter((country) => {\r\n        return (\r\n          country.country.toLowerCase().includes(search) ||\r\n          (country.continent &&\r\n            (activeContinent !== \"All\"\r\n              ? country.continent === activeContinent\r\n              : true) &&\r\n            country.continent.toLowerCase().includes(search)) ||\r\n          (country.countryInfo.iso2 &&\r\n            country.countryInfo.iso2.toLowerCase().includes(search)) ||\r\n          (country.countryInfo.iso3 &&\r\n            country.countryInfo.iso3.toLowerCase().includes(search))\r\n        );\r\n      });\r\n    }\r\n    setCountries(filteredCountries);\r\n  };\r\n\r\n  const filterByContinent = (value) => {\r\n    let filteredCountries = [];\r\n    if (value === \"All\") {\r\n      filteredCountries = countriesCopy;\r\n    } else {\r\n      filteredCountries = countriesCopy.slice().filter((country) => {\r\n        return country.continent && country.continent === value;\r\n      });\r\n    }\r\n    setCountries(filteredCountries);\r\n    setActiveContinent(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SearchByContinents\r\n        filterByContinent={filterByContinent}\r\n        classes={classes}\r\n        active={activeContinent}\r\n      />\r\n      <SearchByCountry\r\n        filterCountries={filterCountries}\r\n        className={classes.margin}\r\n      />\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={styles.tableContainer}>\r\n          <Table className={classes.table} border={1} bordercolor=\"#e0e0e0\">\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {countries.length ? (\r\n                stableSort(countries, getComparator(order, orderBy)).map(\r\n                  (country, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        key={country.country}\r\n                        className={\r\n                          country.cases === country.recovered\r\n                            ? classes.success\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <TableCell align=\"left\">{country.country}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.cases)}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"left\"\r\n                          className={\r\n                            country.todayCases ? classes.newCasesCell : \"\"\r\n                          }\r\n                        >\r\n                          {country.todayCases\r\n                            ? formatNumber(country.todayCases) + \"+\"\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.deaths)}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"left\"\r\n                          className={\r\n                            country.todayDeaths ? classes.deathsCell : \"\"\r\n                          }\r\n                        >\r\n                          {country.todayDeaths\r\n                            ? formatNumber(country.todayDeaths) + \"+\"\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.recovered)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.active)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.critical)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.casesPerOneMillion)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {formatNumber(country.deathsPerOneMillion)}\r\n                        </TableCell>\r\n                        {/* <TableCell align=\"left\">\r\n                        {formatNumber(country.tests)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.testsPerOneMillion)}\r\n                      </TableCell> */}\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell align=\"left\" colSpan={10}>\r\n                    Loading...\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React from \"react\";\r\nimport Leaflet from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { fetchCountryDetails } from \"../../api\";\r\n\r\nimport styles from \"./MapView.module.css\";\r\n\r\nLeaflet.Icon.Default.imagePath = \"../node_modules/leaflet\";\r\n\r\ndelete Leaflet.Icon.Default.prototype._getIconUrl;\r\n\r\nLeaflet.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nfunction formatNumber(number) {\r\n  return number ? new Intl.NumberFormat().format(number) : \"\";\r\n}\r\n\r\nconst MapView = () => {\r\n  const [countries, setCountries] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const getCountriesDetails = async () => {\r\n      const countriesData = await fetchCountryDetails();\r\n      const filteredCountries = countriesData.filter(\r\n        (countryData) => countryData.cases > 0\r\n      );\r\n      setCountries(filteredCountries);\r\n    };\r\n    getCountriesDetails();\r\n  }, []);\r\n\r\n  const mapMarkers = countries.map((country) => {\r\n    return (\r\n      <Marker\r\n        key={country.country}\r\n        position={{\r\n          lat: country.countryInfo.lat,\r\n          lng: country.countryInfo.long,\r\n        }}\r\n      >\r\n        <Popup>\r\n          <div className={styles.mapMarkers}>\r\n            <img\r\n              src={country.countryInfo.flag}\r\n              width=\"80px\"\r\n              title={country.country}\r\n              alt=\"flag\"\r\n            />\r\n            <span>{formatNumber(country.cases)}</span>\r\n          </div>\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Map center={{ lat: 33, lng: 65 }} zoom={3}>\r\n      <TileLayer\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\r\n      />\r\n      {mapMarkers}\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => (\r\n  <nav className={styles.nav}>\r\n    <ul>\r\n      <li><Link to=\"/\">Home</Link></li>\r\n      <li><Link to=\"/charts\">Charts</Link></li>\r\n      <li><Link to=\"/map\">Map</Link></li>\r\n    </ul>\r\n  </nav>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { Cards, Charts, CountryDetails, MapView } from \"./components\";\nimport Header from './components/Header/Header';\nimport { fetchData } from \"./api\";\n\nimport styles from \"./App.module.css\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data: data });\n  }\n\n\trender() {\n\t\tconst { data } = this.state;\n    return (\n      <BrowserRouter>\n        <div className={styles.container}>\n          <Header />\n          <Cards data={data} />\n          <Route path=\"/\" exact  component={CountryDetails} /> \n          <Route path=\"/charts\" component={Charts} /> \n          <Route path=\"/map\" component={MapView} /> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__21gY8\",\"card\":\"Cards_card__1NQxG\",\"infected\":\"Cards_infected__cLa3J\",\"recovered\":\"Cards_recovered__-KqvV\",\"deaths\":\"Cards_deaths__2XXax\",\"cardLabel\":\"Cards_cardLabel__1t0oy\"};"],"sourceRoot":""}