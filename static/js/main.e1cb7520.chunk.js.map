{"version":3,"sources":["components/CountryDetails/CountryDetails.module.css","App.module.css","components/Charts/Charts.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/CountryDetails/TableHeader/TableHeader.js","components/Search/SearchByCountry.jsx","components/Search/SearchByContinents.jsx","components/CountryDetails/CountryDetails.jsx","App.jsx","index.js","components/Cards/Cards.module.css"],"names":["module","exports","Cards","props","data","cases","recovered","deaths","updated","displayData","type","total","description","className","styles","container","Grid","spacing","jusitfy","map","index","key","item","component","Card","xs","md","cx","card","CardContent","Typography","color","cardLabel","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","a","fetch","then","response","json","fetchDailyData","axios","get","modifiedData","dailyData","confirmed","date","reportDate","fetchCountryDetails","fetchCountries","country","Country","Charts","useState","setDailyData","useEffect","fetchApi","length","confirmedCases","x","y","id","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","axisBottom","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","enableGridX","lineWidth","pointSize","pointBorderWidth","pointLabelYOffset","areaOpacity","crosshairType","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","effects","on","style","itemBackground","CountryPicker","countries","setCountries","fetchAPI","FormControl","formControl","NativeSelect","onChange","event","handleCountryChange","target","value","i","TableHeader","classes","order","orderBy","onRequestSort","TableHead","TableRow","numeric","label","headCell","TableCell","align","sortDirection","TableSortLabel","active","onClick","property","tableHead","visuallyHidden","SearchByCountry","TextField","e","filterCountries","SearchByContinents","continent","Button","size","filterByContinent","descendingComparator","b","Leaflet","Icon","Default","imagePath","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","useStyles","makeStyles","theme","root","width","marginTop","paper","marginBottom","fontWeight","table","minWidth","border","clip","height","overflow","padding","position","success","backgroundColor","deathsCell","newCasesCell","formatNumber","number","Intl","NumberFormat","format","CountryDetails","React","countriesCopy","setCountriesCopy","activeContinent","setActiveContinent","setOrder","setOrderBy","countriesData","filteredCountries","filter","countryData","getCountriesDetails","slice","mapMarkers","Marker","lat","countryInfo","lng","long","Popup","src","flag","title","alt","search","toLowerCase","includes","iso2","iso3","Paper","TableContainer","tableContainer","Table","bordercolor","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","todayCases","todayDeaths","critical","casesPerOneMillion","deathsPerOneMillion","Map","center","zoom","TileLayer","attribution","App","state","this","setState","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1cb7520.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"CountryDetails_tableContainer__GGrUY\",\"mapMarkers\":\"CountryDetails_mapMarkers__3lLbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__nAExG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__17KT3\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = (props) => {\r\n\r\n  const { data:  { cases, recovered, deaths, updated } }= props;\r\n\r\n  if (!cases) { return  'Loading...'; }\r\n  \r\n  const displayData = [\r\n    {\r\n      type: 'infected',\r\n      total: cases,\r\n      description: 'Number of active cases of COVID-19'\r\n    },\r\n    {\r\n      type: 'recovered',\r\n      total: recovered,\r\n      description: 'Number of recovered cases of COVID-19'\r\n    },\r\n    {\r\n      type: 'deaths',\r\n      total: deaths,\r\n      description: 'Number of deaths caused by COVID-19'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} jusitfy=\"center\">\r\n        {\r\n          displayData.map( (data, index) => (\r\n            <Grid key={index} item component={Card} xs={12} md={3} className={cx(styles.card, styles[data['type']])}>\r\n              <CardContent>\r\n                <Typography color=\"textPrimary\" className={styles.cardLabel} gutterBottom>{data.type}</Typography>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  <CountUp start={0} end={data.total} duration={2.5} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(updated).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">\r\n                  {data.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          ))\r\n        }\r\n        \r\n        {/* <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalConfirmed} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovered cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid> */}\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://corona.lmao.ninja/v2';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const { cases, recovered, deaths, updated } = await fetch(`${url}/all?yesterday`)\r\n      .then(response => response.json());\r\n    return { cases, recovered, deaths, updated }\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://covid19.mathdro.id/api/daily');\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n      \r\n  }\r\n}\r\n\r\nexport const fetchCountryDetails = async () => {\r\n  try {\r\n    return await fetch(`${url}/countries`).then(response => response.json());\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://api.covid19api.com/countries');\r\n    return data.map((country) => country.Country);\r\n  } catch(error) {\r\n\r\n  }\r\n}\r\n\r\n// https://documenter.getpostman.com/view/11144369/Szf6Z9B3?version=latest","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Charts = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  if (!dailyData && !data.length) return \"Loading...\";\r\n  const confirmedCases = dailyData.map((data) => {\r\n    return { x: data.date, y: data.confirmed };\r\n  });\r\n\r\n  const deaths = dailyData.map((data) => {\r\n    return { x: data.date, y: data.deaths };\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      id: \"Total Deaths\",\r\n      color: \"hsl(0, 50%, 50%)\",\r\n      data: deaths,\r\n    },\r\n    {\r\n      id: \"Total Cases\",\r\n      color: \"hsl(240, 100%, 50%)\",\r\n      data: confirmedCases,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{\r\n          type: \"point\",\r\n        }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: \"auto\",\r\n          max: \"auto\",\r\n          stacked: true,\r\n          reverse: false,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={null}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"\",\r\n          legendOffset: -40,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        enableGridX={false}\r\n        lineWidth={2}\r\n        pointSize={5}\r\n        pointBorderWidth={2}\r\n        pointLabelYOffset={-12}\r\n        areaOpacity={0.1}\r\n        crosshairType=\"x\"\r\n        useMesh={true}\r\n        legends={[\r\n          {\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 100,\r\n            translateY: 0,\r\n            itemsSpacing: 0,\r\n            itemDirection: \"left-to-right\",\r\n            itemWidth: 80,\r\n            itemHeight: 20,\r\n            itemOpacity: 0.75,\r\n            symbolSize: 9,\r\n            symbolShape: \"circle\",\r\n            effects: [\r\n              {\r\n                on: \"hover\",\r\n                style: {\r\n                  itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                  itemOpacity: 1,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = (props) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect onChange={(event) => props.handleCountryChange(event.target.value)}>\r\n        <option value=\"global\">Global</option>\r\n        {\r\n          countries.map((country, i) => <option value={country} key={i}>{country}</option>)\r\n        }\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TableHeader(props) {\r\n\r\n  const headCells = [\r\n    { id: 'country', numeric: false, label: 'Country' },\r\n    { id: 'cases', numeric: true, label: 'Total Cases' },\r\n    { id: 'todayCases', numeric: true, label: 'New Cases' },\r\n    { id: 'deaths', numeric: true, label: 'Total Deaths' },\r\n    { id: 'todayDeaths', numeric: true, label: 'New Deaths' },\r\n    { id: 'recovered', numeric: true, label: 'Total Recovered' },\r\n    { id: 'active', numeric: true, label: 'Active Cases' },\r\n    { id: 'critical', numeric: true, label: 'Serious' },\r\n    { id: 'casesPerOneMillion', numeric: true, label: 'Total Cases / Per 1M' },\r\n    { id: 'deathsPerOneMillion', numeric: true, label: 'Deaths / Per 1M' },\r\n    // { id: 'tests', numeric: true, label: 'Tests' },\r\n    // { id: 'testsPerOneMillion', numeric: true, label: 'Tests / Per 1M' },\r\n  ];\r\n\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='left'\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n              className={classes.tableHead}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst SearchByCountry = (props) => {\r\n  return  <TextField id=\"standard-search\" label=\"Search\" type=\"search\" onChange={ (e) => props.filterCountries(e.target.value)} />\r\n}\r\n\r\nexport default SearchByCountry;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SearchByContinents = (props) => {\r\n  const continents = [\r\n    { label: 'All', value: 'All' },\r\n    { label: 'Africa', value: 'Africa' },\r\n    { label: 'Asia', value: 'Asia' },\r\n    { label: 'Europe', value: 'Europe' },\r\n    { label: 'North America', value: 'North America' },\r\n    { label: 'Oceania', value: 'Australia/Oceania' },\r\n    { label: 'South America', value: 'South America' },\r\n  ];\r\n\r\n  return continents.map((continent, i) => (\r\n    <Button key={i} variant={continent.value === props.active ? 'outlined' : 'contained'} size=\"small\" className={props.classes.margin} color=\"primary\" onClick={(e) => props.filterByContinent(continent.value)}>{continent.label}</Button>\r\n    )\r\n  )\r\n}\r\n\r\nexport default SearchByContinents;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableHeader from \"./TableHeader/TableHeader\";\r\nimport SearchByCountry from \"../Search/SearchByCountry\";\r\nimport SearchByContinents from \"../Search/SearchByContinents\";\r\n\r\nimport Leaflet from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport { fetchCountryDetails } from \"../../api\";\r\n\r\nimport styles from \"./CountryDetails.module.css\";\r\n\r\nLeaflet.Icon.Default.imagePath = \"../node_modules/leaflet\";\r\n\r\ndelete Leaflet.Icon.Default.prototype._getIconUrl;\r\n\r\nLeaflet.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"95%\",\r\n    marginTop: \"100px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tableHead: {\r\n    fontWeight: \"bold\",\r\n    color: \"#000\",\r\n    \"&:hover\": {\r\n      color: \"rgba(0, 0, 0, 0.7)\",\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 1,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  success: {\r\n    backgroundColor: \"rgba(118, 251, 118, 0.25)\",\r\n  },\r\n  deathsCell: {\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  newCasesCell: {\r\n    backgroundColor: \"#ffd68b\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction formatNumber(number) {\r\n  return number ? new Intl.NumberFormat().format(number) : \"\";\r\n}\r\n\r\nconst CountryDetails = () => {\r\n  const [countries, setCountries] = React.useState([]);\r\n  const [countriesCopy, setCountriesCopy] = React.useState([]);\r\n  const [activeContinent, setActiveContinent] = React.useState(\"All\");\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"cases\");\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const getCountriesDetails = async () => {\r\n      const countriesData = await fetchCountryDetails();\r\n      const filteredCountries = countriesData.filter(\r\n        (countryData) => countryData.cases > 0\r\n      );\r\n      setCountries(filteredCountries);\r\n      setCountriesCopy(filteredCountries);\r\n    };\r\n    getCountriesDetails();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const filterCountries = (value) => {\r\n    let filteredCountries = [];\r\n    if (value === \"\") {\r\n      return filterByContinent(activeContinent); // return and show active continent values\r\n    } else {\r\n      const search = value.toLowerCase();\r\n      filteredCountries = countries.slice().filter((country) => {\r\n        return (\r\n          country.country.toLowerCase().includes(search) ||\r\n          (country.continent &&\r\n            (activeContinent !== \"All\"\r\n              ? country.continent === activeContinent\r\n              : true) &&\r\n            country.continent.toLowerCase().includes(search)) ||\r\n          (country.countryInfo.iso2 &&\r\n            country.countryInfo.iso2.toLowerCase().includes(search)) ||\r\n          (country.countryInfo.iso3 &&\r\n            country.countryInfo.iso3.toLowerCase().includes(search))\r\n        );\r\n      });\r\n    }\r\n    setCountries(filteredCountries);\r\n  };\r\n\r\n  const filterByContinent = (value) => {\r\n    let filteredCountries = [];\r\n    if (value === \"All\") {\r\n      filteredCountries = countriesCopy;\r\n    } else {\r\n      filteredCountries = countriesCopy.slice().filter((country) => {\r\n        return country.continent && country.continent === value;\r\n      });\r\n    }\r\n    setCountries(filteredCountries);\r\n    setActiveContinent(value);\r\n  };\r\n\r\n  const mapMarkers = countriesCopy.map((country) => {\r\n    return (\r\n      <Marker\r\n        key={country.country}\r\n        position={{\r\n          lat: country.countryInfo.lat,\r\n          lng: country.countryInfo.long,\r\n        }}\r\n      >\r\n        <Popup>\r\n          <div className={styles.mapMarkers}>\r\n            <img src={country.countryInfo.flag} width=\"80px\" title={country.country} alt=\"flag\" />\r\n            <span>{formatNumber(country.cases)}</span>\r\n          </div>\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     <SearchByContinents filterByContinent={filterByContinent} classes={classes} active={activeContinent} />\r\n      <SearchByCountry filterCountries={filterCountries} className={classes.margin} />\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={styles.tableContainer}>\r\n          <Table className={classes.table} border={1} bordercolor=\"#e0e0e0\">\r\n            <TableHeader\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {stableSort(countries, getComparator(order, orderBy))\r\n                .map((country, index) => {\r\n                  return (\r\n                    <TableRow key={country.country} className={country.cases === country.recovered ? classes.success : ''}>\r\n                      <TableCell align=\"left\">{country.country}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.cases)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" className={country.todayCases ? classes.newCasesCell : ''}>\r\n                        {country.todayCases ? formatNumber(country.todayCases) + '+' : ''}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.deaths)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" className={country.todayDeaths ? classes.deathsCell : ''}>\r\n                        {country.todayDeaths ? formatNumber(country.todayDeaths) + '+' : ''}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.recovered)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.active)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.critical)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.casesPerOneMillion)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.deathsPerOneMillion)}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">\r\n                        {formatNumber(country.tests)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {formatNumber(country.testsPerOneMillion)}\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n\r\n      <Map center={{ lat: 33, lng: 65 }} zoom={3}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\r\n      />\r\n        { mapMarkers }\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { Cards, Charts, CountryPicker, CountryDetails } from \"./components\";\n\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data: data });\n  }\n\n  handleCountryChange = async (country) => {\n    // fetch data \n    // set state\n  }\n\n\trender() {\n\t\tconst { data } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts />\n        <CountryDetails />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__21gY8\",\"card\":\"Cards_card__1NQxG\",\"infected\":\"Cards_infected__cLa3J\",\"recovered\":\"Cards_recovered__-KqvV\",\"deaths\":\"Cards_deaths__2XXax\",\"cardLabel\":\"Cards_cardLabel__1t0oy\"};"],"sourceRoot":""}